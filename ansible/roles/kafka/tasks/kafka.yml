---


- name: create {{ kafka_log_dir }}
  become: yes
  file:
    path: "{{ kafka_log_dir }}/kraft-combined-logs"
    state: directory
    mode: 0777
    recurse: yes
  notify: "restart kafka"

- name: copy server.properties {{ kafka_home }}/config/kraft/server.properties
  become: yes
  template:
    src: templates/server.properties.j2
    dest: "{{ kafka_home }}/config/kraft/server.properties"
  notify: "restart kafka"

- name: check if kraft logs dir has been initialized
  shell: "{{ kafka_home }}/bin/kafka-storage.sh info -c {{ kafka_home }}/config/kraft/server.properties"
  register: storage_init
  ignore_errors: yes

- name: init kraft logs dir
  shell: "{{ kafka_home }}/bin/kafka-storage.sh format -t {{ kafka_cluster_id }} -c {{ kafka_home }}/config/kraft/server.properties"
  when: '"is not formatted" in storage_init.stdout'
  notify: "restart kafka"

- name: copy kafka.environment {{ kafka_home }}/kafka.environment
  become: yes
  template:
    src: templates/kafka.environment.j2
    dest: "{{ kafka_home }}/kafka.environment"
  notify: "restart kafka"

- name: download {{ prometheus_jmx }}
  become: yes
  get_url:
    url: "{{ prometheus_jmx }}"
    dest: "{{ kafka_home }}/prometheus-agent.jar"

- name: copy prometheus-agent.yml {{ kafka_home }}/config/prometheus_agent.yml
  become: yes
  template:
    src: templates/prometheus_agent.yml.j2
    dest: "{{ kafka_home }}/config/prometheus_agent.yml"
  notify: "restart kafka"

- name: copy filebeat kafka configs to /etc/filebeat/modules.d/kafka.yml
  become: yes
  template:
    src: templates/filebeat_kafka.yml.j2
    dest: /etc/filebeat/modules.d/kafka.yml

- name: filebeat enable kafka module
  become: yes
  command: filebeat modules enable kafka

- name: copy metricbeat kafka configs to /etc/metricbeat/modules.d/kafka.yml
  become: yes
  template:
    src: templates/metricbeat_kafka.yml.j2
    dest: /etc/metricbeat/modules.d/kafka.yml

- name: metricbeat modules enable kafka
  become: yes
  command: metricbeat modules enable kafka

- name: install kafka systemd unit file
  become: yes
  template:
    src: templates/kafka.service.j2
    dest: /etc/systemd/system/kafka.service
  notify: "restart kafka"

- name: create {{ playbook_dir }}/../{{ ssl_exchange }}/client-broker-ssl.properties
  template:
    src: templates/client-broker-ssl.properties.j2
    dest: "{{ playbook_dir }}/../{{ ssl_exchange }}/client-broker-ssl.properties"
  delegate_to: localhost
  when: secure|bool

- name: create {{ playbook_dir }}/../{{ ssl_exchange }}/client-zookeeper-ssl.properties
  template:
    src: templates/client-zookeeper-ssl.properties.j2
    dest: "{{ playbook_dir }}/../{{ ssl_exchange }}/client-zookeeper-ssl.properties"
  delegate_to: localhost
  when: secure|bool

- meta: flush_handlers

- name: allow ClusterAction
  shell: "kafka-acls.sh --zk-tls-config-file {{ ssl_client_dir }}/client-zookeeper-ssl.properties --authorizer-properties zookeeper.connect={{ groups['zookeeper'][0] }}:2182 --add --operation ClusterAction --cluster --allow-principal User:CN=kafka,OU=org,O=org,L=home,ST=Bavaria,C=DE"
  when: secure|bool and groups.kafka.index(inventory_hostname) == groups.kafka|length - 1

- name: allow Describe cluster
  shell: "kafka-acls.sh --zk-tls-config-file {{ ssl_client_dir }}/client-zookeeper-ssl.properties --authorizer-properties zookeeper.connect={{ groups['zookeeper'][0] }}:2182 --add --operation Describe --cluster --allow-principal User:CN=kafka,OU=org,O=org,L=home,ST=Bavaria,C=DE"
  when: secure|bool and groups.kafka.index(inventory_hostname) == groups.kafka|length - 1

- name: allow Describe __consumer_offsets
  shell: "kafka-acls.sh --zk-tls-config-file {{ ssl_client_dir }}/client-zookeeper-ssl.properties --authorizer-properties zookeeper.connect={{ groups['zookeeper'][0] }}:2182 --add --operation Describe --topic __consumer_offsets --allow-principal User:CN=kafka,OU=org,O=org,L=home,ST=Bavaria,C=DE"
  when: secure|bool and groups.kafka.index(inventory_hostname) == groups.kafka|length - 1
